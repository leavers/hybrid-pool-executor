[tool.pdm]
[tool.pdm.dev-dependencies]
dev = [
    "bumpver>=2022.1120",
    "black>=23.1.0",
    "coverage[toml]>=7.2.0",
    "isort>=5.12.0",
    "mypy>=1.0.1",
    "pyproject-autoflake>=1.0.2",
    "pyproject-flake8>=5.0.4.post1",
    "pytest>=7.2.1",
    "pytest-asyncio>=0.20.3",
    "pytest-timeout>=2.1.0",
    "sphinx>=6.1.3",
    "sphinx-rtd-theme>=1.2.0",
    "nox>=2022.11.21",
]
lint = [
    "black>=23.1.0",
    "isort>=5.12.0",
    "pyproject-autoflake>=1.0.2",
    "pyproject-flake8>=5.0.4.post1",
]
mypy = ["mypy>=1.0.1"]

[tool.pdm.scripts]
autoflake_ = "pautoflake hybrid_pool_executor tests noxfile.py"
autoflake_check = "pautoflake --check hybrid_pool_executor tests noxfile.py"
black_ = "black hybrid_pool_executor tests noxfile.py"
black_check = "black --check hybrid_pool_executor tests noxfile.py"
flake_ = "pflake8 hybrid_pool_executor tests noxfile.py"
format = {composite = ["autoflake_", "isort_", "black_"]}
format_check = {composite = ["autoflake_check", "isort_check", "black_check"]}
isort_ = "isort hybrid_pool_executor tests noxfile.py"
isort_check = "isort --check hybrid_pool_executor tests noxfile.py"
lint = {composite = ["flake_", "mypy_"]}
mypy_ = "mypy hybrid_pool_executor tests noxfile.py"
pytest_ = "pytest tests"
static_check = {composite = ["mypy_"]}
test = {composite = ["pytest_"]}

[tool.autoflake]
in-place = true
recursive = true
remove-all-unused-imports = true
ignore-init-module-imports = true
remove-duplicate-keys = true
remove-unused-variables = true

[tool.black]
line-length = 88

[tool.coverage.run]
branch = true
source = ["hybrid_pool_executor"]
parallel = true

[tool.coverage.report]
show_missing = true
exclude_lines = ["pragma: nocover"]

[tool.flake8]
max-line-length = 88
extend-ignore = "E203,"
# better to use whitelist: "exclude" makes flake8 process a huge amount of files
# exclude = [".git", "__pycache__", "build", "dist"]

[tool.isort]
profile = "black"
src_paths = ["hybrid_pool_executor", "tests", "noxfile.py"]

[tool.mypy]
check_untyped_defs = true
ignore_missing_imports = true
show_error_codes = true
# use comment "type: ignore" to ignore single line
# use comment "type: ignore[error-code] to ignore single error"

[tool.pyright]
extraPaths = ["__pypackages__/3.8/lib/"]

[tool.pytest.ini_options]
asyncio_mode = "strict"

[project]
name = "hybrid-pool-executor"
version = "0.0.4"
description = "Pool executor supporting thread, process and async."
authors = [
    {name = "Leavers", email = "leavers930@gmail.com"},
]
dependencies = []
requires-python = ">=3.8"
readme = "README.rst"
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Natural Language :: English",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Utilities",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["concurrent", "thread"]

[build-system]
requires = ["pdm-pep517>=1.0"]
build-backend = "pdm.pep517.api"
